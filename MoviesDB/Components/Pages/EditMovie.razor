@page "/editmovie/{id:int}"
@rendermode InteractiveServer
@using Models
@inject NavigationManager NavigationManager

<PageTitle>Edit Movie - EMDb</PageTitle>

<div class="container-xxl p-5 d-flex justify-content-center">
    <div class="row">
        @if (Movie != null)
        {
            <h3>Edit @Movie.Nimi</h3>
            @if (Globals.isLoggedIn)
            {
                <EditForm Model="Movie" OnSubmit="HandleSubmit" FormName="editMovieForm">
                    <div class="mb-3">
                        <label for="edit-nimi" class="form-label">Title *</label>
                        <InputText id="edit-nimi" @bind-Value="Movie.Nimi" class="form-control" style="width: 400px;" />
                    </div>

                    <div class="mb-3">
                        <label for="edit-ohjaaja" class="form-label">Director *</label>
                        <InputText id="edit-ohjaaja" @bind-Value="Movie.Ohjaaja" class="form-control" style="width: 400px;" />
                    </div>

                    <div class="mb-3">
                        <label for="edit-julkaistu" class="form-label">Release Year *</label>
                        <InputNumber id="edit-julkaistu" @bind-Value="Movie.Julkaistu" class="form-control" style="width: 400px;" />
                    </div>

                    <div class="mb-3">
                        <label for="edit-pituus" class="form-label">Length *</label>
                        <InputNumber id="edit-pituus" @bind-Value="Movie.Pituus" class="form-control" style="width: 400px;" />
                        <div>Movie Length in minutes</div>
                    </div>

                    <div class="mb-3">
                        <label for="edit-arvio" class="form-label">Rating *</label>
                        <InputNumber id="edit-arvio" @bind-Value="Movie.Arvio" class="form-control" style="width: 400px;" />
                        <div>IMDb Rating (0.0-10)</div>
                    </div>

                    <div class="mb-3">
                        <label for="edit-genre" class="form-label">Genres *</label>
                        <InputText id="edit-genre" @bind-Value="Movie.Genre" class="form-control" style="width: 400px;" />
                        <div>Example: Action, Genre, Drama</div>
                    </div>

                    <div class="mb-3">
                        <label for="edit-päänäyttelijät" class="form-label">Stars *</label>
                        <InputText id="edit-päänäyttelijät" @bind-Value="Movie.Päänäyttelijät" class="form-control" style="width: 400px;" />
                        <div>Example: Ryan Gosling, Emma Stone, Tom Hanks</div>
                    </div>

                    <div class="mb-3">
                        <label for="edit-image" class="form-label">Image URL</label>
                        <InputText id="edit-image" @bind-Value="Movie.Image" class="form-control" style="width: 400px;" />
                        <div>Example: https://m.media-amazon.com/images/M/MV5BYzhiNDkyNzktNTZmYS00ZTBkLTk2MDAtM2U0YjU1MzgxZjgzXkEyXkFqcGdeQXVyMTMxODk2OTU._V1_.jpg</div>
                        <div>We recommend to copy image from IMDb.com</div>
                    </div>

                    <button type="submit" class="btn btn-hover"><span>Submit</span></button>
                </EditForm>
            }
            else
            {
                <hr />
                <h2>Sign in to edit movies</h2>
            }
        }

        @if (IncorrectInput)
        {
            <br />
            <div class="alert alert-danger fade-in" role="alert">
                Fill in the fields correctly.
            </div>
        }

        @if (IncorrectArvio)
        {
            <br />
            <div class="alert alert-danger fade-in" role="alert">
                Please give a rating between 0 and 10.
            </div>
        }

    </div>
</div>

@code {
    public Movie Movie { get; set; } = new Movie();

    [Parameter]
    public int Id { get; set; }

    private bool IncorrectInput { get; set; }
    private bool IncorrectArvio { get; set; }

    private readonly Database _database = new();

    protected override async Task OnParametersSetAsync()
    {
        Movie = await _database.GetMovieByIdAsync(Id);
    }

    private async Task HandleSubmit()
    {
        if (IsInputValid())
        {
            await _database.UpdateMovieAsync(Movie);
            NavigationManager.NavigateTo($"/movie/{Movie.IdElokuvat}");
        }
    }

    private bool IsInputValid()
    {
        IncorrectInput = string.IsNullOrEmpty(Movie.Nimi) ||
                         string.IsNullOrEmpty(Movie.Ohjaaja) ||
                         Movie.Julkaistu < 1888 ||
                         Movie.Pituus <= 0 ||
                         string.IsNullOrEmpty(Movie.Genre) ||
                         string.IsNullOrEmpty(Movie.Päänäyttelijät);

        IncorrectArvio = Movie.Arvio < 0 || Movie.Arvio > 10;

        return !IncorrectInput && !IncorrectArvio;
    }
}
