@page "/register"
@using Models
@inject NavigationManager NavigationManager

<PageTitle>Sign Up - EMDb</PageTitle>
<div class="container-xxl p-5 d-flex justify-content-center">
    <div class="row">
        <h3>Sign Up</h3>

        <EditForm Model="@_user" OnSubmit="HandleSubmit" FormName="registerForm">
            <form>
                <div class="mb-3">
                    <label for="name" class="form-label">Username</label>
                    <InputText id="name" @bind-Value="_user.Name" class="form-control" style="width: 300px;" />
                </div>

                <div class="mb-3">
                    <label for="email" class="form-label">Email</label>
                    <InputText id="email" @bind-Value="_user.Email" class="form-control" style="width: 300px;" />
                </div>

                <div class="mb-3">
                    <label for="password" class="form-label">Password</label>
                    <InputText id="password" @bind-Value="_user.Password" Type="password" class="form-control" style="width: 300px;" />
                </div>

                <div class="mb-3">
                    <label for="confirmPassword" class="form-label">Confirm Password</label>
                    <InputText id="confirmPassword" @bind-Value="_user.ConfirmPassword" Type="password" class="form-control" style="width: 300px;" />
                </div>

                <button type="submit" class="btn btn-hover"><span>Sign Up</span></button>
            </form>
        </EditForm>
    </div>
</div>

@if (UserAlreadyExists)
{
    <br />
    <div class="alert alert-danger fade-in" role="alert">
        User already exists or email is taken.
    </div>
}

@if (PasswordMatchNot)
{
    <br />
    <div class="alert alert-danger fade-in" role="alert">
        Passwords do not match.
    </div>
}

@if (FillAllAlert)
{
    <br />
    <div class="alert alert-danger fade-in" role="alert">
        Please fill in all the fields.
    </div>
}

@if (IncorrectPassword)
{
    <br />
    <div class="alert alert-danger fade-in" role="alert">
        The password must have at least 6 characters, 1 uppercase letter, and 1 special character.
    </div>
}

@if (IncorrectEmail)
{
    <br />
    <div class="alert alert-danger fade-in" role="alert">
        The email is incorrect.
    </div>
}

@if (IncorrectName)
{
    <br />
    <div class="alert alert-danger fade-in" role="alert">
        The username is incorrect.
    </div>
}

@code {
    [SupplyParameterFromForm]
    private User _user { get; set; } = new User(string.Empty);

    private Database _database = new Database();

    public bool UserAlreadyExists { get; set; }
    public bool EmailIsTaken { get; set; }
    public bool FillAllAlert { get; set; }
    public bool PasswordMatchNot { get; set; }
    public bool IncorrectName { get; set; }
    public bool IncorrectEmail { get; set; }
    public bool IncorrectPassword { get; set; }

    private Check _check = new Check();

    private async Task HandleSubmit()
    {
        FillAllAlert = false;
        UserAlreadyExists = false;
        PasswordMatchNot = false;
        IncorrectPassword = false;
        IncorrectEmail = false;
        IncorrectName = false;

        if (!string.IsNullOrWhiteSpace(_user.Name) &&
            !string.IsNullOrWhiteSpace(_user.Email) &&
            !string.IsNullOrWhiteSpace(_user.Password) &&
            !string.IsNullOrWhiteSpace(_user.ConfirmPassword))
        {
            if (_user.Password == _user.ConfirmPassword)
            {
                if (_check.CheckPassword(_user))
                {
                    bool userExists = await _database.CheckUserExistenceAsync(_user);

                    if (!userExists)
                    {
                        await _database.InsertUserAsync(_user);
                        Globals.isLoggedIn = true;
                        NavigationManager.NavigateTo("/");
                    }
                    else
                    {
                        UserAlreadyExists = true;
                    }
                }
                else
                {
                    IncorrectPassword = true;
                }
            }
            else
            {
                PasswordMatchNot = true;
            }
        }
        else
        {
            FillAllAlert = true;
        }
    }
}
